// Import overridden Bootstrap variables BEFORE their 
// definition in the vendor files
@import 'library/variables';
@import 'library/mixins';

// Add core Bootstrap styles. Comment and uncomment 
// functionality inside framework code as required to keep 
// 'main.css' as small as possible.
// @import 'font-awesome';

// Styles shared between custom components
// @import 'snippets/**';

// Skins may exist in several locations throughout the 
// application.  They may override existing framework styles
// directives or represent styles for custom application 
// modules
// @import 'skins/manifest.gen';

// Sections code includes page-specific and layout-related 
// styles

$text-color: white;


body {
  font-family: 'open sans', sans-serif; 
  color: #00f;
  width: inherit;
  height: inherit;
  margin: 0px; 
  padding: 0px;
  position: relative;
  background-color: black;
  background-image: url(../images/stars.jpg);
  background-size: 1500px;
  background-repeat: no-repeat;
  background-position: top left;
}

div.top{
  margin: 0px;
  padding: 10px 0px 0px 10px;
  height: 40px;
  background-color: black;
  border-bottom: 2px solid #ffa500;

  h1{
    margin: 0;
    font-size: 24px;
    color: $text-color;
    font-weight: lighter;
    letter-spacing: 4px;
    line-height: 33px;
  }

}

div.top 

.ng-scope:before {
  opacity: 0.7;
}

/*
div {
  width: inherit;
}
*/

div.wrapper {
  float: right;
  right: 0;
  top: 0;
  width: 50vw;
  height: 86vh;

  div.information {
    margin: 15px;
    margin-top: 17px;
    padding: 15px;
    font-size: 30px;
    color: $text-color;
    opacity: 0.39;
    background: #000000;
    border: 1px solid #979797;
    height: 100%;
  }

}

.graph {
  color: $brand-secondary;
  width: 50%;
  float: left;
}


.nodes {
  width: 600px;
  stroke: #333;
}

.path {
  stroke: $text-color;
  stroke-width: 4px;
  stroke-linecap: "butt";
}

.path:hover {
  stroke: red;
  fill: red;
  stroke-width: 8px;
  stroke-linecap: "butt"; 
  cursor: pointer;
}

.edgePath:hover {
  stroke: red;
  fill: red;
  stroke-width: 2px;
  cursor: pointer;
  stroke-linecap: "butt"; 
}

#canvas {
  width: 100%;
  height: 900px;
  fill: #e9eceb;
  opacity: 1;
  display: block;
  margin: auto;
}

.output {
  width: inherit;
}

#zoomGraph {
  width: inherit;
}
.exit {
  fill: $text-color;
  opacity: 1;
  stroke: #cc0000;
  stroke-opacity: 0.6;
  stroke-width: 7px;
}

.exit:hover {
  opacity: 1;
  stroke: #d1b6f1;
  stroke-width: 12px;
  stroke-opacity: 0.7;
  cursor:pointer;
}

.entry {
  opacity: 1;
  fill: $text-color;
  stroke-opacity: 0.6;
  stroke: #cc0000;
  stroke-width: 7px;
}

.entry:hover {
  opacity: 1;
  stroke: #d1b6f1;
  stroke-width: 12px;
  stroke-opacity: 0.7;
  cursor:pointer;
}

.cluster {
  opacity: 1;
  stroke: #154de5;
  fill: $text-color;
  stroke-width: 7px;
  stroke-opacity: 0.7;
  stroke-linecap: "round";
}

.node.cluster:hover {
  opacity: 1;
  stroke: #ffa500;
  stroke-width: 12px;
  stroke-opacity: 0.7;
  cursor: pointer;
}

.issue {
  opacity: 1;
  fill: $text-color;
  stroke: #66cdaa;
  stroke-width: 7px;
  stroke-opacity: 0.7;
}

.issue:hover {
  opacity: 1;
  fill: $text-color;
  stroke: #fff68f;
  stroke-width: 12px;
  stroke-opacity: 0.7;
  cursor: pointer;
}
text:hover {
  stroke-width: 1px;
  stroke: #534741;
}

.label{
  align: center;
}

text {
  font-family: 'Cousine', monospace;
  stroke: #534741;
  stroke-width: 0.8px;
  fill: #534741;
  align: center;
}

div.name {
  width: 100%;
}
div.description {
  width: 100%;
}





